security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        #! Route jobworker par département pour un service
        services_department:
            pattern:   ^/api/v1/services/(\d+)/department/(\d+)/jobworker(/)?(rating|price)?(/)?$
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        #! Toutes les routes services excepté département
        services:
            pattern:  ^/api/v1/services
            anonymous: lazy
        #! Toutes les routes départment
        department:
            pattern:  ^/api/v1/department(/)?
            anonymous: lazy
        #! UserController::add
        user_add:
            pattern:  ^/api/v1/users/add$
            anonymous: lazy
        #! UserController::getRandomJobWorker (/api/v1/users/jobworker/random)
        #! UserController::getJobWorkerDetails (/api/v1/users/jobworker/150)
        #! UserController::getRatingOfJobworker (/api/v1/users/jobworker/150/rating)
        user_jobworker:
            pattern:  ^/api/v1/users/jobworker/(random|\d+)?(/rating)?(/)?$
            anonymous: lazy
        #! UserController::getAllContact
        user_contacts:
            pattern:  ^/api/v1/users/contacts(/)?
            anonymous: lazy
        api_doc:
            pattern:  ^/doc$
            anonymous: lazy
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\AdminAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }